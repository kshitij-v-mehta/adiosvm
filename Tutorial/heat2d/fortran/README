2D Heat Transfer example 
Fortran 90 code, 2D array with 2D decomposition

1. Build
--------
Edit make.settings 
- compiler and compiler options
- ADIOS 2.x installation directory
- optionally 
   ADIOS 1.x installation directory
   Parallel HDF5 installation directory

$ cd simulation
$ make adios2
$ cd ..

$ cd analysis
$ make adios2_stream adios2_file
$ cd ..

2. Run Simulation
-----------------

$ simulation/heatSimulation_adios2
 Usage: heat_transfer  output  N  M   nx  ny   steps iterations
 output: name of output file
 N:      number of processes in X dimension
 M:      number of processes in Y dimension
 nx:     local array size in X dimension per processor
 ny:     local array size in Y dimension per processor
 steps:  the total number of steps to output
 iterations: one step consist of this many iterations

$ mpirun -n 12 simulation/heatSimulation_adios2 heat.bp  4 3    256 256   6 500

will perform the calculation 
- on 12 processes 
- on a 4*256 x 3*256 2D array (Fortran column-major ordering)
- for 6*500 iterations, 
- producing an output of 6 steps stored in heat.bp 

$ bpls -l heat.bp 
  double   T     6*{768, 1024} = 0 / 200

$ python3 ../python/heat_plot.py -i heat.bp -o T
$ eog . 


3. Run Analysis
---------------

$ ./analysis/heatAnalysis_adios2_file 
 Usage: heat_read  input
  input:  name of input file

$ mpirun -n 3 analysis/heatAnalysis_adios2_file  heat.bp
 Input file: heat.bp
 Using BPFile engine for input
 Global array size: 1024x768
 Available steps      = 6
 Read step            = 0
 ...
 Read step            = 5

will perform reading the data step by step from the simulation output on 3 processes and 
each process will print its part of the data array into a separate text file (fort.*)


$ mpirun -n 3 analysis/heatAnalysis_adios2_stream  heat.bp
 Input file: heat.bp
 Using BPFile engine for input
 Process step: 0
 Global array size: 1024x768
 Process step: 1
 ...
 Process step: 5


will read each step in heat.bp one by one and print the data into text files (fort.*)

---------------
Staging demos
---------------

A 100 output step on less processes, with more computation between steps. 
In adios2.xml, use "SST" for engine of the io group "SimulationOutput"

In two terminal windows:

$ mpirun -n 12 simulation/heatSimulation_adios2 heat.bp 4 3 256 256 100 500
$ mpirun -n 2 analysis/heatAnalysis_adios2_stream heat.bp

or 

$ mpirun -n 12 simulation/heatSimulation_adios2 heat.bp 4 3 256 256 100 500
$ mpirun -n 2 /opt/adios2/bin/adios_reorganize heat.bp staged.bp SST "" BPFile "" 2 1


